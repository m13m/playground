package main

import (
	"fmt"
	"encoding/json"
	"time"

)


type AutoGenerated struct {
	ID      string  `json:"id"`
	Content Content `json:"content"`
}
type URLDetails struct {
	Path string `json:"path"`
}
type Os struct {
	Family string `json:"family"`
}
type Browser struct {
	Family string `json:"family"`
	Major  string `json:"major"`
	Minor  string `json:"minor"`
}
type Device struct {
	Family string `json:"family"`
	Model  string `json:"model"`
	Brand  string `json:"brand"`
}
type UseragentDetails struct {
	Os      Os      `json:"os"`
	Browser Browser `json:"browser"`
	Device  Device  `json:"device"`
}
type HTTP struct {
	Referer          string           `json:"referer"`
	StatusCode       int              `json:"status_code"`
	URLDetails       URLDetails       `json:"url_details"`
	Method           string           `json:"method"`
	UseragentDetails UseragentDetails `json:"useragent_details"`
	StatusCategory   string           `json:"status_category"`
	Useragent        string           `json:"useragent"`
	Version          string           `json:"version"`
	URL              string           `json:"url"`
}
type Client struct {
	IP string `json:"ip"`
}
type Network struct {
	Client       Client `json:"client"`
	BytesWritten int    `json:"bytes_written"`
}
type Attributes struct {
	HTTP       HTTP    `json:"http"`
	Network    Network `json:"network"`
	DateAccess int64   `json:"date_access"`
}
type Content struct {
	Timestamp  time.Time  `json:"timestamp"`
	Tags       []string   `json:"tags"`
	Host       string     `json:"host"`
	Service    string     `json:"service"`
	Message    string     `json:"message"`
	Attributes Attributes `json:"attributes"`
}




func main() {

data := [] byte(`{
  "id": "AQAAAWwig574tIo2xQA",
  "content": {
    "timestamp": "2019-07-24T05:45:47.000Z",
    "tags": [
      "filename:access.log",
      "http-server",
      "https-server",
      "instance-id:5593997066171610976",
      "instance-type:g1-small",
      "internal-hostname:maqbool",
      "numeric_project_id:110352667648",
      "project:earth-244718",
      "service:nginx",
      "source:nginx",
      "sourcecategory:http_web_access",
      "zone:asia-south1-c"
    ],
    "host": "maqbool",
    "service": "nginx",
    "message": "54.36.149.105 - - [24/Jul/2019:11:15:47 +0530] \"GET /robots.txt HTTP/1.1\" 200 92 \"-\" \"Mozilla/5.0 (compatible; AhrefsBot/6.1; +http://ahrefs.com/robot/)\"",
    "attributes": {
      "http": {
        "referer": "-",
        "status_code": 200,
        "url_details": {
          "path": "/robots.txt"
        },
        "method": "GET",
        "useragent_details": {
          "os": {
            "family": "Other"
          },
          "browser": {
            "family": "AhrefsBot",
            "major": "6",
            "minor": "1"
          },
          "device": {
            "family": "Spider",
            "model": "Desktop",
            "brand": "Spider"
          }
        },
        "status_category": "OK",
        "useragent": "Mozilla/5.0 (compatible; AhrefsBot/6.1; +http://ahrefs.com/robot/)",
        "version": "1.1",
        "url": "/robots.txt"
      },
      "network": {
        "client": {
          "ip": "54.36.149.105"
        },
        "bytes_written": 92
      },
      "date_access": 1563947147000
    }
  }
}`)

var blob AutoGenerated

json.Unmarshal(data, &blob)

fmt.Printf("%s \n", blob.ID)
fmt.Printf("%s \n", blob.Content.Host)

}

/*https://mholt.github.io/json-to-go/*/